name: ImageBuild

on:
  # mainブランチにpushされ、自動テストが完了したら実行するワークフロー
  workflow_run:
    workflows:
      - pytest
    branches:
      - main
    types:
      - completed

jobs:
  check-previous-workflow:
    name: Check previous workflow
    runs-on: ubuntu-latest
    steps:
      # 前のワークフローが失敗している場合は終了
      - name: Check previous workflow status.
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: |
          echo '::error::Previous workflow was failed'
          exit 1

  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Create ECR repository if it doesn't exist
        run: |
          readonly CREATED_REPOSITORY=`aws ecr describe-repositories --query "repositories[].repositoryName" | jq 'contains(["flask-sample-api"])'`
          if "${CREATED_REPOSITORY}"; then
            echo 'ECR repository exists.'
          else
            echo 'ECR repository does not exists.'
            aws cloudformation create-stack --stack-name flask-sample-api-create-ecr \
              --template-body file://`pwd`/aws/cfn/create-ecr.yml
          fi
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set tag value
        run: |
          echo "GIT_TAG=$(TZ=Asia/Tokyo date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: flask-sample-api
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.GIT_TAG }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.GIT_TAG }}
      - name: Add git tag
        run: |
          git tag ${{ env.GIT_TAG }}
          git push origin ${{ env.GIT_TAG }}
